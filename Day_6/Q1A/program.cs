using System;

namespace Day_6_Q1A
{
    class Account
    {
        static int getid;
        int id;
        string name;
        double balance;
        static double Interestrate = 0.07;
        const float minbal = 1000;

        static Account()
        {
            Console.WriteLine("State Bank of India \n");
        }

        public Account(string nm, double bal)
        {
            id = ++getid;
            Name = nm;
            Balance = bal;
        }
        public string Name
        {
            get { return name; }
            set { name = value; }
        }
        public double Balance
        {
            get { return balance; }
            set
            {
                if (value < minbal)
                {
                    Console.WriteLine("Minimum Account Opening balance is ₹1000");
                }
                if (value < 1)
                {
                    Console.WriteLine("Cannot have balance as negitve or zero");
                }
                balance = value;
            }
        }
        public int Id
        {
            get { return id; }
        }
        public void deposit(double amt)
        {
            Balance += amt;
            Console.WriteLine("Deposited " + amt + " in " + name + "'s Account");
        }
        public void withdraw(double amount)
        {
            Console.WriteLine("Withdrawn Amount : " + amount);
            if (amount > 1)
            {
                if (Balance > amount)
                {
                    if (balance - amount < minbal)
                    {
                        Console.WriteLine(name + "'s Account Couldnt maintain min balance of " + minbal + "\n Ammount cannot be withdrawn");
                    }
                    else
                    {
                        Balance -= amount;
                        Console.WriteLine("New Avaliable balance in " + name + "'s Account : " + Balance);
                    }
                }
                else
                {
                    Console.WriteLine("Not Enough balance in " + name + "'s Account");
                }
            }

            else
            {
                Console.WriteLine("Amount cannot be zero or negative");
            }
        }
        public string Display()
        {
            return string.Format("ID : {0}; Name : {1}; Balance : {2}", id, name, balance);
        }

        public void interestamount()
        {
            Console.WriteLine("Interest Deposited in " + name + "'s Account : " + balance * Interestrate);
            balance = balance + balance * Interestrate;
        }
    }
    class program
    {
        static void Main()
        {
            //Q1A.    Create Account class having instance member

            //        id- id should be generated by application, it is readonly property
            //        name – write getter setter
            //        balance- Write getter setter It has deposit method who’s job is to increase the balance.

            //      Declare static float Interestrate=0.07. It has withdraw method who’s job is to reduce balance.
            //      Declare conts float minbal=1000. When user withdraw money your application should ensure that minimum balance is maintain.
            //      Give appropriate validation like user can not deposit or withdraw 0 or negative.
            //      user can not open account with 0 amount When you run your application at the beginning it should print name of bank and copy right detail.
            //      It has static method which will calculate and return interest amount for each account holder and increase the balance.
            //      Write display method who’s job is to display Id name and balance and interest received.
            //      If you are comfortable the exception try to use it and handle it also.
            
            Account a1 = new Account("Raj", 1000); // create a  object 
            Account a2 = new Account("Geeta", 40000); // create a object 
          
            Console.WriteLine(a1.Display());
            Console.WriteLine(a2.Display());

            a1.withdraw(500);
            a2.withdraw(80000);
            a1.withdraw(-10);
            Console.WriteLine(a1.Display());
            Console.WriteLine(a2.Display());

            a1.interestamount();
            a2.interestamount();

            Console.WriteLine(a1.Display());
            Console.WriteLine(a2.Display());
        }
    }
}
